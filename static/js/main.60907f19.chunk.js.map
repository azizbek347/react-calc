{"version":3,"sources":["constants/constants.js","constants/keypad.js","actionCreators/index.js","components/Button/Button.jsx","components/Button/index.js","components/Layout/index.js","components/Layout/Layout.jsx","App.js","utils/mathUtils.js","reducers/calcReducer.js","reducers/index.js","store/index.js","index.js"],"names":["operations","numberKey","operatorKey","clearKey","equalKey","keypad","value","type","btnClick","payload","Button","props","btnConfiguration","className","onClick","e","connect","dispatch","classes","Layout","state","display","calcReducer","map","keypadItem","Array","isArray","keypadItemEl","disabled","App","hasSpareDot","str","match","length","removeSpareDot","re","lastNumber","split","slice","clearSpareOperator","checkForZeroOrInfinity","reducer","action","newState","lastTyped","includes","round","evaluate","toString","combineReducers","store","createStore","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60907f19.chunk.js","sourcesContent":["const operations = ['-', '+', '*', '/'];\r\nconst numberKey = 'numberKey';\r\nconst operatorKey = 'operatorKey';\r\nconst clearKey = 'clearKey';\r\nconst equalKey = 'equalKey';\r\n\r\nexport { operations, numberKey, operatorKey, clearKey, equalKey };","import {\r\n    numberKey,\r\n    operatorKey,\r\n    clearKey,\r\n    equalKey\r\n} from './constants';\r\n\r\nconst keypad = [\r\n    [{\r\n        value: '1',\r\n        type: numberKey\r\n    }, {\r\n        value: '2',\r\n        type: numberKey\r\n    }, {\r\n        value: '3',\r\n        type: numberKey\r\n    }, {\r\n        value: '+',\r\n        type: operatorKey,\r\n    }],\r\n    [{\r\n        value: '4',\r\n        type: numberKey\r\n    }, {\r\n        value: '5',\r\n        type: numberKey\r\n    }, {\r\n        value: '6',\r\n        type: numberKey\r\n    }, {\r\n        value: '-',\r\n        type: operatorKey,\r\n    }],\r\n    [{\r\n        value: '7',\r\n        type: numberKey\r\n    }, {\r\n        value: '8',\r\n        type: numberKey\r\n    }, {\r\n        value: '9',\r\n        type: numberKey\r\n    }, {\r\n        value: '*',\r\n        type: operatorKey,\r\n    }],\r\n    [{\r\n        value: '0',\r\n        type: numberKey\r\n    }, {\r\n        value: '.',\r\n        type: numberKey\r\n    }, {\r\n        value: '=',\r\n        type: equalKey,\r\n    }, {\r\n        value: '/',\r\n        type: operatorKey,\r\n    }],\r\n    [{\r\n        value: 'Очистить',\r\n        type: clearKey,\r\n    }]\r\n]\r\n\r\nexport default keypad;","const btnClick = ({ type, ...payload }) => ({ type, payload });\r\n\r\nexport default btnClick;","import { Button as BsButton } from 'react-bootstrap';\r\nimport { clearKey, equalKey, numberKey, operatorKey } from '../../constants';\r\nimport btnClick from '../../actionCreators';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Button = (props) => {\r\n    const { btnConfiguration, btnConfiguration: { value }, className, btnClick } = props;\r\n    const clickHandler = (e) => {\r\n        btnClick(btnConfiguration)\r\n    };\r\n    return <BsButton className={className} onClick={clickHandler} value={value}>\r\n        {value}\r\n    </BsButton>\r\n}\r\n\r\nconst configureButton = (props) => {\r\n    const { btnConfiguration: { type } } = props;\r\n    let classes = 'text-white ';\r\n    switch (type) {\r\n        case (clearKey): {\r\n            classes += 'custom-border border-warning bg-secondary font-weight-bolder text-danger';\r\n            break;\r\n        }\r\n        case (equalKey): {\r\n            classes += '';\r\n            break;\r\n        }\r\n        case (numberKey): {\r\n            classes += 'custom-border border-success bg-secondary';\r\n            break;\r\n        }\r\n        case (operatorKey): {\r\n            classes += 'custom-border border-primary bg-secondary';\r\n            break;\r\n        }\r\n        default: {}\r\n    }\r\n    return <Button {...props} className={classes}></Button>\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    btnClick: (payload) => dispatch(btnClick(payload)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(configureButton);","import Button from \"./Button\";\r\nexport default Button;","import Layout from \"./Layout\";\r\nexport default Layout;","import Button from '../Button';\r\nimport './style.css';\r\nimport { connect } from 'react-redux';\r\nimport {keypad} from '../../constants';\r\n\r\nconst Layout = (props) => {\r\n    const {display} = props;\r\n    return <div className=\"calc-wrapper\">\r\n        <h4 className=\"title\">Калькулятор</h4>\r\n        <div className='display my-4'>{display}</div>\r\n        <div className='btns-grid'>\r\n            {\r\n                keypad.map(keypadItem =>\r\n                    Array.isArray(keypadItem) ?\r\n                        keypadItem.map(keypadItemEl => <Button key={keypadItemEl.value} btnConfiguration={keypadItemEl} disabled={keypadItemEl.disabled || false} />) :\r\n                        <Button key={keypadItem.value} btnConfiguration={keypadItem} disabled={keypadItem.disabled || false}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ display:state.calcReducer });\r\n\r\nexport default connect(mapStateToProps, null)(Layout);","import './App.css';\nimport Layout from './components/Layout';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const hasSpareDot = (str = '') => str.match(/\\./g) === null ? false : str.match(/\\./g).length > 1 ? true : false;\r\n// {\r\n//     const matchRes = str.match(/\\./g);\r\n//     console.log(matchRes);\r\n//     if(matchRes === null) return false;\r\n//     return matchRes.length > 1 ? true : false; \r\n// };\r\n\r\nconst removeSpareDot = (str = '') => {\r\n    const re = /(\\+|-|\\*|\\/+)/;\r\n    const lastNumber = str.split(re).slice(-1)[0];\r\n    str = lastNumber === '.' ? `${str.slice(0, -1)}0${lastNumber}` : str;\r\n    return hasSpareDot(lastNumber) ? str.slice(0, -1) : str;\r\n}\r\n\r\nconst clearSpareOperator = (str = '') => str.slice(-1).match(/(\\+|-|\\*|\\/+)/) ? str.slice(0, -1) : str;\r\n\r\nconst checkForZeroOrInfinity = (str = '') => str === '0' || str === 'Infinity';\r\n\r\nexport {\r\n    hasSpareDot, removeSpareDot, clearSpareOperator, checkForZeroOrInfinity\r\n};","import { operatorKey, numberKey, clearKey, equalKey, operations } from '../constants';\r\nimport { evaluate, round } from 'mathjs';\r\nimport { removeSpareDot, clearSpareOperator, checkForZeroOrInfinity } from '../utils/mathUtils';\r\n\r\nconst reducer = (state = '0', action) => {\r\n    const { type, payload: { value } = {} } = action;\r\n    switch (type) {\r\n        case numberKey: {\r\n            let newState = checkForZeroOrInfinity(state) ? value : `${state}${value}`;\r\n            newState = removeSpareDot(newState);\r\n            return newState;\r\n        }\r\n        case operatorKey: {\r\n            const lastTyped = state.slice(-1);\r\n            const newState = operations.includes(lastTyped) ? `${state.slice(0, -1)}${value}` : `${state}${value}`;\r\n            return newState;\r\n        }\r\n        case equalKey: return round(evaluate(clearSpareOperator(state)), 2).toString();\r\n        case clearKey: return `0`;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import calcReducer from \"./calcReducer\";\r\nimport { combineReducers } from 'redux';\r\nexport default combineReducers({ calcReducer });\r\n","import {createStore} from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nrender(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}